import win.ui;
import win.ui.menu;
import web.form;
import web.json;
import web.script;
import process;
import win.util.round;
import win.util.tray;
import win.clip;
import win.clip.viewer;
import web.layout;
import web.layout.debug; 
import web.layout.behavior.windowCommand; 
import web.layout.behavior.tabs; 

var winform = ..win.form(bottom=605;parent=...;right=305;border="none";text="禅道桌面提醒工具";)
wbLayout = web.layout(winform)  
wbLayout.go("/layout/index.html") 

alignRight(winform);
tray         = win.util.tray(winform);
tray.message = 0x400+9981/*_WM_TRAYMESSAGE*/
tray.tip     = lang.prompt.softName;
winform.popmenu = win.ui.popmenu(winform);
winform.popmenu.add(lang.popmenu.exit, function(id){ exit()});

winform.wndproc = function(hwnd,message,wParam,lParam)
{
	select(message) 
	{
		case( 0x400+9981/*_WM_TRAYMESSAGE*/ ) 
		{ 
			if(lParam = 0x203/*_WM_LBUTTONDBLCLK*/)
			{
				winform.show(); 
			}
		
	    	if( lParam = 0x205/*_WM_RBUTTONUP*/ )
	    	{
	    		import mouse;
	    		x,y = mouse.getPos();	    		
	    		win.setForeground(winform.hwnd)
	    		winform.popmenu.popup( x,y,true )
	    	}
		} 
		case( 0x112/*_WM_SYSCOMMAND*/ ) 
		{ 		
			if( wParam == 0xF020/*_SC_MINIMIZE*/ )
			{		
				winform.show(false); 
				tray.pop(lang.prompt.minToTray, lang.prompt.common);
  			}
  			if( wParam == 0xF060/*_SC_CLOSE*/) 
  			{
  				exit();
  			}
		}
	}	
}

function exit()
{
	tray.delete();
 	winform.close();
 	win.quitMessage();
}

/*
function initModuleMenu()
{
  moduleMenu = '';
  if(user.role == 'qa' or user.role == 'qd') config.order.menu = {"todo"; "bug"; "task"}
  if(user.role == 'po' or user.role == 'pd') config.order.menu = {"todo"; "story"; "bug"}
  for(i=1; #config.order.menu; 1)
  {
  		var module = config.order.menu[i];
  		moduleMenu += "<li id='" + module + "Tab'>";
  		moduleMenu += "<a href='#" + module + "Page' onclick=loadFeatureBar('" + module +"')>";
  		moduleMenu += lang.moduleMenu[module] + "</a></li>";
  }
}
initModuleMenu();

function loadFeatureBar(module)
{
  featureBar = ''
  for(i=1; #config.order[module]; 1)
  {	
  	var browseType = config.order[module][i];
  	 featureBar += "<span><a id='" + browseType + "Tab' onclick=loadList('" + module + "','" + browseType + "')>" + lang.featureBar[module][browseType] + "</a></span> ";
  }
  if(wb.external) wb.external.featureBar = featureBar;
}
loadFeatureBar('todo');
	
wb.external = 
{ 
	msgbox = win.msgbox; 
	loadFeatureBar = loadFeatureBar; 
	moduleMenu = moduleMenu; 
	featureBar = featureBar; 
}

function viewObject(object, id)
{	
	process.execute(getAPI({object; 'view'; id; viewType='html'}));
}
if(wb.external) wb.external.viewObject = viewObject;	

function loadList(object, browseType, pageID)
{
	var list = "<tr class='colhead'><th class='w-id'>ID</th><th class='w-title'>" + lang.list.title + "</th></tr>"
	var response = http.get(getAPI({'my'; object; browseType; pageID = pageID}));
	response = web.json.parse(response);
	response = web.json.parse(response.data);
	pager = response.pager;
	var index = object == "story" ? "stories" : object + "s";
	for(k,v in response[index]) 
	{
		var title = v.title ? v.title : v.name; 
		title = string.replace(title,"\\","")
		list += "<tr><td>" + v.id + "</td><td><a href='#' onclick=viewObject('" + object + "','" + v.id + "')>" + title + "</a></td></tr>";
	}
	list += "<tr><td colspan=2 align='right'><div class='pager'>";
	list += string.format(lang.pager.summary, pager.recTotal, pager.recPerPage, pager.pageID, pager.pageTotal);
	list += " <a href='#' onclick=loadList('" + object + "','" + browseType + "','" + (pager.pageID - 1) + "')>" + lang.pager.pre + "</a>";
	list += " <a href='#' onclick=loadList('" + object + "','" + browseType + "','" + (pager.pageID + 1) + "')>" + lang.pager.next + "</a>";
	list += " <a href='#' onclick=loadList('" + object + "','" + browseType + "','" + pager.pageTotal + "')>" + lang.pager.last + "</a>";
	list += "</div></td></tr>";
	if(wb.external) wb.external.list = list;
}

if(wb.external) wb.external.loadList   = loadList;		
*/
jQueryReady = /*
	function viewObject(module, id)
	{
		external.viewObject(module, id);
	}
	
	function loadList(module, browseType, pageID)
	{
		external.loadList(module, browseType, pageID);
		$('#' + module +'List').html(external.list);
		
		$("#featureBar span a").css({"color":"black", "font-weight":"normal"});
		$("#featureBar #" + browseType + "Tab").css({"font-weight":"bold", "color":"#009900"});
		
		$('table').css({"border-spacing":"0", "border-collapse":"collapse"})
		$('.colhead th').css({background:"#efefef", "font-size":"12px", "font-weight":"bold", "height":"24px", "border-bottom":"1px solid #e4e4e4"});
		$('.w-id').css({"width":"30"});
		$('.w-title').css({"width":"300px"});
		$("tr td").css({"font-size":"12px"});
		$("tr td a").css({"text-decoration":"none"});
		
		$(".pager").css({"font-size":"12px"})	
	}
	
    function loadFeatureBar(module)
    {
   		external.loadFeatureBar(module);
    	$('#featureBar').html(external.featureBar);
    	
    	$("#moduleMenu li").css({"background":"#1A4F85"});
    	$("#moduleMenu li a").css({"font-weight":"normal", "color":"white"});
    	$("#moduleMenu #" + module + "Tab").css({"background":"e5e5e5"});
   		$("#moduleMenu #" + module + "Tab a").css({"font-weight":"bold", "color":"#009900"});
    	
    	var browseType = module == 'todo' ? 'today' : 'assignedTo';
    	loadList(module, browseType);
    }

    $('#moduleMenu').html(external.moduleMenu);
    $('#featureBar').html(external.featureBar);
    loadList('todo', 'today');
    
    $("#moduleMenu #todoTab").css({"background":"e5e5e5"});
    $("#moduleMenu #todoTab a").css({"font-weight":"bold", "color":"#009900"});
    
    $(".pager").css({"font-size":"12px"})
    
    $('#tabs').tabs();
*/

/*
win.clip.viewer(winform).onDrawClipboard = function() 
{ 
	createFile = assert(loadcode("/create.aau"));	
	createFile();
}

winform.addtimer(config.sys.updateInterval, function(){getActions()});
function getActions()
{
	actions  = {}
	var actionID = string.load(ACTION_FILE) or 0;
	var response  = http.get(getAPI({"api"; "getmodel"; "action"; "getUnreadActions"; "actionID=" + actionID}));
	response      = web.json.parse(response);
	response.data = web.json.parse(web.json.parse(response.data));
	
	if(!table.count(response.data)) return;
	for(object,list in response.data)
	{
		for(k,action in list)
		{
			if(action.actionID > actionID) actionID = action.actionID;
			action.action = string.replace(action.action,"\\","")
			actions[action.actionID] = action;
		}		
	}
	
	string.save(ACTION_FILE, actionID);
	notifyFile = assert(loadcode("/notify.aau"));	
	notifyFile();
}
getActions();
*/

winform.show();
win.loopMessage();
return winform,wb;
