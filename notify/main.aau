import win.ui;
import web.layout;
import web.layout.behavior.windowSizer;
import web.layout.behavior.windowCommand;
import web.layout.behavior.keyboard;
import string.md5
import inet.http;
import web.json;

var loginform = ..win.form(bottom=605;parent=...;right=305;border="none";scroll="none";text="禅道桌面提醒工具" )
wbLayout = web.layout(loginform)  
wbLayout.go("/layout/login.html") 

function alignRight(form)
{
	clientRect = form.getClientRect();
	deskRect   = form.getRect();
	deskWidth  = deskRect.left + deskRect.right;
	deskHeight = deskRect.top  + deskRect.bottom;
	form.setPos(deskWidth - clientRect.right - 28, deskHeight - clientRect.bottom - 35);
}
alignRight(loginform);

..user = {}
wbLayout.onButtonClick = 
{
	login = function(ltTarget,ltEle,x,y,ltMousePara)
	{	
		user.zentaourl = wbLayout.getEle("zentaourl").value;
		if(user.zentaourl == '') 
		{
			showResult('failed', string.format(lang.prompt.notEmpty, lang.login.zentaourl));
			return;
		}
		user.account   = wbLayout.getEle("account").value;
		if(user.account == '') 
		{
			showResult('failed', string.format(lang.prompt.notEmpty, lang.login.account));
			return;
		}	
		user.password  = wbLayout.getEle("password").value;
		if(!#user.password)
		{
			showResult('failed', string.format(lang.prompt.notEmpty, lang.login.password));
			return;
		}
		if(#user.password and #user.password != 32) user.password = string.md5(user.password, true);
		if(!init()) return;
		enter();

	}
}

..http = inet.http();
now = time();
now.format="%Y-%m-%d";
var LOG_FILE    = "/log/" + tostring(now) + '.txt';
INFO_FILE   = "/tmp/.logininfo";
ACTION_FILE = "/tmp/actionID";

langFile = loadcode("/lang/zh-cn.aau");
langFile();
configFile = loadcode("/config/config.aau");
configFile();

function log(content)
{
	string.save(LOG_FILE, content + '\n', true);
}

function showResult(result, output)
{
	if(result == 'success') output = "<span style='color:green'>" + output + "</span>";
	if(result == 'failed')  output = "<span style='color:red'>" + output + "</span>";
	wbLayout.queryEle("#result").innerHTML = output;
	loginform.setTimeout(function(){wbLayout.queryEle("#result").innerHTML = "";}, 3000); 
}

function getAPI(param)
{
	var moduleName = param[1]
	var methodName = param[2]
	var api = ''
	var viewType = param.viewType ? param.viewType : "json"; 
    if(zentaoConfig.requestType == 'GET')
	{
		
	}
	else 
	{
		api = user.zentaourl + "/"
		if(moduleName == 'user' and methodName == 'login')
		{
			if(#user.password) var password = string.md5(user.password + tostring(session.data.rand), true);	
			api += "user-login.json?account=" + user.account + "&password=" + password; 
			log(api)
		 	return api;
		 }

		for(i=1; #param; 1) 
		{
			api += param[i]; 
			if(param[i+1]) api += "-";
		}
		if(param.pageID)
		{ 
			if(methodName == 'todo') api += "--all-date_desc,status,begin-";
			if(methodName != 'todo') api += "-id_desc-";
			api += pager.recTotal + "-" + pager.recPerPage + "-" + param.pageID;
		}
		api += "." + viewType;
		if(session) api += "?" + session.data.sessionName + "=" + session.data.sessionID;
	}
	log(api)
	return api;
}

function getConfig()
{
	zentaoConfig = http.get(user.zentaourl + "/index.php?mode=getconfig");
	if(!zentaoConfig) return false;
	zentaoConfig = web.json.parse(zentaoConfig); 
	return true;
}

function checkVersion()
{
    var version = zentaoConfig.version;
    var isPro   = false;
    if(string.find(string.lower(version), 'pro'))
    {
    	isPro = true;
    	version = string.sub(version, (#'pro') + 1);
    }
    else 
    { 
    	version = tonumber(version);
    }

    if(isPro)
    {
    	if(tonumber(version) <= 1.3)
    	{
			 showResult('failed', string.format(lang.prompt.versionUnmatch, zentaoConfig.version, 'pro1.3'));  
    		 return false;
    	}
    } 
    else 
    {    
    	if(tonumber(version) < 4.0)
    	{
   			 win.msgbox(string.format(lang.prompt.versionUnmatch, zentaoConfig.version, '4.0'), lang.prompt.warning);
   			 return false;
   		}    
    }

	return true;
}

function getSession()
{
	session = http.get(getAPI({'api'; 'getsessionid'}));
	if(!session or session == '') return false;
	session = web.json.parse(session);
	session.data = web.json.parse(session.data);	
	return true;
}

function login()
{
	var response = http.get(getAPI({'user'; 'login'}));
	response = web.json.parse(response);

	if(response.status == 'failed') return false;
	return true;
}

function getRole()
{
	var response = http.get(getAPI({"api"; "getmodel"; "user"; "getById"; "account=" + user.account}));
	if(!response or response == '') return false;
	response = web.json.parse(response);
	if(response.status == 'fail') return false;
	response = web.json.parse(response.data);
	user.role = response.role;
	return true;
}

function init()
{
	if(!getConfig())    {showResult('failed', lang.prompt.wrongUrl); return false} 
	if(!checkVersion()) return false;
	if(!getSession())   {showResult('failed', lang.prompt.wrongUrl); return false} 
	if(!login())        {showResult('failed', lang.prompt.wrongInfo); return false} 
	if(!getRole())      {showResult('failed', lang.prompt.wrongInfo); return false}
	string.save(INFO_FILE, web.json.stringify(user, true));
	return true;
}

function enter()
{
	indexFile = assert(loadcode("/index.aau"));	
	indexFile();
	loginform.close();
}

function loadUserInfo()
{
	var userInfo = string.load(INFO_FILE);
	if(!userInfo) return;
	user = web.json.parse(userInfo);
	if(getConfig() and checkVersion() and getSession() and login() and getRole())
	{
		string.save(INFO_FILE, web.json.stringify(user, true));
		return enter();
	}
	wbLayout.getEle("zentaourl").value = user.zentaourl;
	wbLayout.getEle("account").value   = user.account;
	wbLayout.getEle("password").value  = user.password;	
}
loadUserInfo();

loginform.show() 
win.loopMessage();
return loginform;
